{"version":3,"file":"react-authorize-net.js","sources":["../node_modules/typeface-roboto/files/roboto-latin-400.woff2","../src/Input.tsx","../src/FormComponent.tsx","../src/accept-js.ts","../src/validation.ts","../src/FormContainer.tsx","../src/AcceptHosted.tsx"],"sourcesContent":["export default \"data:font/woff2;base64,\"","import React from 'react'\nimport MaskedInput, { MaskedInputProps } from 'react-text-mask'\nimport { Box, Flex } from 'rebass'\n\nexport interface Props\n  extends React.InputHTMLAttributes<HTMLInputElement>,\n    MaskedInputProps {\n  valid: boolean\n  focused: boolean\n  label?: JSX.Element | string\n}\n\nconst Input = (props: Props) => {\n  const {\n    onChange,\n    onFocus,\n    onBlur,\n    mask,\n    valid,\n    focused,\n    label,\n    className,\n    style,\n    ...otherProps\n  } = props\n\n  const onChangeHandler: (\n    ev: React.ChangeEvent<HTMLInputElement>\n  ) => void = ev => {\n    ev.persist()\n    if (onChange) {\n      onChange(ev)\n    }\n  }\n\n  const onFocusHandler: (\n    ev: React.FocusEvent<HTMLInputElement>\n  ) => void = ev => {\n    ev.persist()\n    if (onFocus) {\n      onFocus(ev)\n    }\n  }\n\n  const onBlurHandler: (\n    ev: React.FocusEvent<HTMLInputElement>\n  ) => void = ev => {\n    ev.persist()\n    if (onBlur) {\n      onBlur(ev)\n    }\n  }\n\n  return (\n    <Flex className={className} alignItems=\"center\" style={style}>\n      {props.label ? (\n        <Flex flexDirection={'row-reverse'} mr={2}>\n          {props.label}\n        </Flex>\n      ) : null}\n      <Box>\n        <MaskedInput\n          mask={mask}\n          onChange={onChangeHandler}\n          onFocus={onFocusHandler}\n          onBlur={onBlurHandler}\n          style={{\n            ...otherProps,\n            boxSizing: 'border-box',\n            color: 'inherit',\n            fontSize: 'inherit',\n            fontFamily: \"inherit\",\n            backgroundColor: \"inherit\",\n            width: '100%'\n          }}\n          {...otherProps}\n        />\n      </Box>\n    </Flex>\n  )\n}\n\nexport default Input\n","import * as R from 'ramda'\nimport React from 'react'\nimport {\n  FaCreditCard,\n  FaExclamationCircle,\n  FaRegCalendarAlt\n} from 'react-icons/fa'\nimport { Motion, spring } from 'react-motion'\nimport { Box, Flex, Text } from 'rebass'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nimport robotoFont from 'typeface-roboto/files/roboto-latin-400.woff2'\n\nimport { FormType, InjectedProps } from './FormContainer'\nimport Input, { Props } from './Input'\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: \"Roboto\";\n    src: url(${robotoFont})\n  }\n`\nconst FormInput = styled(Input)(props => ({\n  '& input': {\n    '&::placeholder': { color: 'inherit' },\n    '&:focus': { outline: 0 },\n    backgroundColor: 'transparent',\n    border: '0',\n    padding: '0'\n  },\n  backgroundColor: '#7795f8',\n  border: '1px solid #819efc',\n  borderRadius: '4px',\n  color: props.valid ? '#fff' : '#FFC7EE',\n  fontFamily: 'inherit',\n  fontSize: '1em',\n  height: '1em',\n  padding: '1.5em',\n  width: '100%'\n}))\n\nconst PayButton = styled.button(props => ({\n  '&:hover': {\n    cursor: !props.disabled ? 'pointer' : 'not-allowed'\n  },\n  backgroundColor: '#f6a4eb',\n  border: '1px solid #2e6da4',\n  borderRadius: '4px',\n  boxShadow:\n    '0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08), inset 0 1px 0 #ffb9f6',\n  color: 'white',\n  fontSize: '1.1em',\n  opacity: props.disabled ? 0.9 : 1,\n  fontFamily: 'inherit',\n  padding: '12px 48px',\n  width: '100%'\n}))\n\nconst CardNumber = ({\n  type = 'text',\n  name = 'cardNumber',\n  placeholder = '1234 5678 9012 3456',\n  ...props\n}: Props) => {\n  return (\n    <FormInput\n      name=\"cardNumber\"\n      type={type}\n      placeholder={placeholder}\n      guide={false}\n      label={<FaCreditCard size=\"1.1em\" />}\n      mask={[\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        ' ',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        ' ',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        ' ',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/\n      ]}\n      {...props}\n    />\n  )\n}\n\nconst CardCode = ({\n  type = 'text',\n  name = 'cardCode',\n  placeholder = 'CVC',\n  ...props\n}: Props) => {\n  return (\n    <FormInput\n      name={name}\n      type={type}\n      placeholder={placeholder}\n      guide={false}\n      mask={[/\\d/, /\\d/, /\\d/, /\\d?/]}\n      {...props}\n    />\n  )\n}\n\nconst ExpDate = ({\n  type = 'text',\n  name = 'expDate',\n  placeholder = 'MM/YY',\n  ...props\n}: Props) => {\n  return (\n    <FormInput\n      name={name}\n      type={type}\n      placeholder={placeholder}\n      mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/]}\n      guide={false}\n      label={<FaRegCalendarAlt size=\"1.1em\" />}\n      {...props}\n    />\n  )\n}\n\nconst ErrorComponent = (props: {\n  field: keyof FormType\n  style?: React.CSSProperties\n  key?: string\n}) => {\n  const slugs: { [K in keyof FormType]: string } = {\n    cardCode: 'Card code',\n    cardNumber: 'Card number',\n    expDate: 'Expiration date'\n  }\n\n  return (\n    <Flex\n      style={props.style}\n      key={props.field}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <FaExclamationCircle color=\"inherit\" />\n      <Text fontFamily=\"inherit\" color=\"inherit\" pl={2}>\n        {slugs[props.field]} is not valid\n      </Text>\n    </Flex>\n  )\n}\n\ntype FormComponentProps = InjectedProps & {\n  className?: string\n  style?: {\n    form?: React.CSSProperties\n    button?: React.CSSProperties\n    input?: React.CSSProperties\n  }\n}\n\nconst FormComponent: React.FC<FormComponentProps> = ({ style, ...props }) => {\n  const canSubmit = R.values(props.validationErrors).every(\n    value => value === true\n  )\n\n  const invalidFields: Array<keyof FormType> = R.toPairs(props.validationErrors)\n    .filter(([, status]) => !status)\n    .map(([v]) => v as keyof FormType)\n    .slice(0, 1)\n\n  return (\n    <Flex\n      className={props.className}\n      style={style && style.form}\n      flexWrap=\"wrap\"\n      mb={4}\n      bg=\"#6772e5\"\n      p={[3, 5] as any}\n      justifyContent=\"center\"\n    >\n      <GlobalStyle />\n\n      <Box width={[1, 2 / 4]} mb={[3, 0] as any}>\n        <CardNumber\n          style={style && style.input}\n          onFocus={R.curry(props.handleFocus)('cardNumber')}\n          onBlur={props.handleBlur}\n          onChange={R.curry(props.handleChange)('cardNumber')}\n          focused={props.focused === 'cardNumber'}\n          valid={props.validationErrors.cardNumber}\n          value={props.values.cardNumber}\n        />\n      </Box>\n      <Box width={[1 / 2, 1 / 4]} pl={[0, 4] as any}>\n        <CardCode\n          style={style && style.input}\n          onFocus={R.curry(props.handleFocus)('cardCode')}\n          onBlur={props.handleBlur}\n          onChange={R.curry(props.handleChange)('cardCode')}\n          focused={props.focused === 'cardCode'}\n          valid={props.validationErrors.cardCode}\n          value={props.values.cardCode}\n        />\n      </Box>\n\n      <Box width={[1 / 2, 1 / 4]} pl={2}>\n        <ExpDate\n          style={style && style.input}\n          onFocus={R.curry(props.handleFocus)('expDate')}\n          onBlur={props.handleBlur}\n          onChange={R.curry(props.handleChange)('expDate')}\n          valid={props.validationErrors.expDate}\n          focused={props.focused === 'expDate'}\n          value={props.values.expDate}\n        />\n      </Box>\n      <Box width={[1, 1 / 2] as any} pt={4}>\n        <PayButton\n          style={style && style.button}\n          disabled={!canSubmit}\n          onClick={canSubmit ? props.handleSubmit : undefined}\n        >\n          Pay ${props.amount}\n        </PayButton>\n      </Box>\n\n      <Box width={1} py={4}>\n        <Motion\n          key={R.head(invalidFields)}\n          style={{ opacity: spring(1) }}\n          defaultStyle={{ opacity: 0 }}\n        >\n          {config => (\n            <div style={config}>\n              {R.head(invalidFields) ? (\n                <ErrorComponent\n                  key={R.head(invalidFields)}\n                  field={R.head(invalidFields) as keyof FormType}\n                />\n              ) : null}\n            </div>\n          )}\n        </Motion>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default styled(FormComponent)({\n  fontFamily: 'system-ui'\n})\n","const dispatchData = async (payload: {\n  authData: Accept.AuthData\n  cardData: Accept.CardData\n}): Promise<Accept.Response> => {\n  return new Promise((resolve, reject) =>\n    Accept.dispatchData(payload, response => {\n      switch (response.messages.resultCode) {\n        case 'Ok':\n          resolve(response)\n          break\n\n        case 'Error':\n          reject(response)\n          break\n      }\n    })\n  )\n}\n\nexport default { dispatchData }\n","export const validateCardCode = (input: string) =>\n  RegExp(/^\\d{3}\\d?$/).test(input)\n\nexport const validateCardNumber = (input: string) =>\n  RegExp(/^(?:4[0-9]{12}(?:[0-9]{3})?|(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}|(?:2131|1800|35\\d{3})\\d{11})$/).test(input)\n\nexport const validateExpDate = (input: string) =>\n  RegExp(/^\\d\\d\\/\\d\\d$/).test(input)\n","import PropTypes from 'prop-types'\nimport * as R from 'ramda'\nimport React from 'react'\nimport Accept from './accept-js'\n\nimport {\n  validateCardCode,\n  validateCardNumber,\n  validateExpDate\n} from './validation'\n\nexport enum AuthorizeNetScriptUrl {\n  Production = 'https://js.authorize.net/v1/Accept.js',\n  Sandbox = 'https://jstest.authorize.net/v1/Accept.js'\n}\n\nexport interface FormType {\n  cardNumber: string\n  cardCode: string\n  expDate: string\n}\n\nexport interface State {\n  apiErrors: string[]\n  values: FormType\n  focused?: keyof FormType\n}\nexport interface Props {\n  environment: 'sandbox' | 'production'\n  clientKey: string\n  apiLoginId: string\n  onSuccess?: (Response: Accept.Response, formValues: FormType) => void\n  onError?: (errors: string[]) => void\n  amount?: number\n  component?: React.FunctionComponent<InjectedProps>\n  render?: React.FunctionComponent<InjectedProps>\n  children?: React.FunctionComponent<InjectedProps>\n  initialState?: State\n}\n\ntype TPropTypes = {\n  [T in keyof Props]:\n    | PropTypes.Validator<Props[T]>\n    | PropTypes.Requireable<Props[T]>\n}\n\nexport interface InjectedProps extends State {\n  amount?: number\n  validationErrors: { [K in keyof FormType]: boolean }\n  handleSubmit: () => void\n  handleFocus: (\n    field: keyof FormType,\n    ev: React.FocusEvent<HTMLInputElement>\n  ) => React.FocusEvent<HTMLInputElement>\n\n  handleBlur: (\n    ev: React.FocusEvent<HTMLInputElement>\n  ) => React.FocusEvent<HTMLInputElement>\n  handleChange: (\n    field: keyof FormType,\n    ev: React.ChangeEvent<HTMLInputElement>\n  ) => React.ChangeEvent<HTMLInputElement>\n}\n\nexport default class FormContainer extends React.Component<Props, State> {\n  static propTypes: Partial<TPropTypes> = {\n    amount: PropTypes.number,\n    apiLoginId: PropTypes.string.isRequired,\n    children: PropTypes.func,\n    clientKey: PropTypes.string.isRequired,\n    component: PropTypes.any,\n    environment: PropTypes.oneOf<'sandbox' | 'production'>([\n      'sandbox',\n      'production'\n    ]).isRequired,\n    render: PropTypes.func\n  }\n\n  static runValidations: (\n    values: FormType\n  ) => { [K in keyof FormType]: boolean } = formValues => ({\n    cardCode: validateCardCode(formValues.cardCode),\n    cardNumber: validateCardNumber(formValues.cardNumber.replace(/\\s/g, '')),\n    expDate: validateExpDate(formValues.expDate)\n  })\n\n  state = this.props.initialState || {\n    apiErrors: [],\n    focused: undefined,\n    values: { cardNumber: '', cardCode: '', expDate: '' }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this.submitHandler = this.submitHandler.bind(this)\n    this.changeHandler = this.changeHandler.bind(this)\n    this.blurHandler = this.blurHandler.bind(this)\n    this.focusHandler = this.focusHandler.bind(this)\n  }\n\n  componentDidMount() {\n    const script = document.createElement('script')\n\n    switch (this.props.environment) {\n      case 'production':\n        script.src = AuthorizeNetScriptUrl.Production\n        break\n      case 'sandbox':\n        script.src = AuthorizeNetScriptUrl.Sandbox\n        break\n    }\n    document.head.appendChild(script)\n  }\n\n  componentWillUnmount() {\n    const head = document.head\n    const scripts = head.getElementsByTagName('script')\n\n    Array.from(scripts)\n      .filter(\n        script =>\n          script.src === AuthorizeNetScriptUrl.Production ||\n          script.src === AuthorizeNetScriptUrl.Sandbox\n      )\n      .forEach(injectedScript => head.removeChild(injectedScript))\n  }\n  submitHandler(): Promise<Accept.Response> {\n    const authData = {\n      apiLoginID: this.props.apiLoginId,\n      clientKey: this.props.clientKey\n    }\n\n    const [month, year] = this.state.values.expDate.split('/')\n\n    const cardData = {\n      cardCode: this.state.values.cardCode,\n      cardNumber: this.state.values.cardNumber.replace(/\\s/g, ''),\n      month,\n      year\n    }\n\n    const secureData = { authData, cardData }\n\n    return Accept.dispatchData(secureData)\n      .then(response => {\n        if (this.props.onSuccess) {\n          this.props.onSuccess(response, this.state.values)\n        }\n\n        this.setState({\n          values: { cardCode: '', cardNumber: '', expDate: '' }\n        })\n\n        return response\n      })\n      .catch(response => {\n        this.setState({\n          apiErrors: response.messages.message.map((err: any) => err.text)\n        })\n        if (this.props.onError) {\n          this.props.onError(response)\n        }\n\n        throw response\n      })\n  }\n\n  changeHandler(\n    field: keyof FormType,\n    ev: React.ChangeEvent<HTMLInputElement>\n  ) {\n    this.setState(oldState => ({\n      ...oldState,\n      values: {\n        ...oldState.values,\n        [field]: ev.target.value\n      }\n    }))\n    return ev\n  }\n\n  focusHandler(field: keyof FormType, ev: React.FocusEvent<HTMLInputElement>) {\n    this.setState({ focused: field })\n    return ev\n  }\n\n  blurHandler(ev: React.FocusEvent<HTMLInputElement>) {\n    this.setState({ focused: undefined })\n    return ev\n  }\n\n  render() {\n    const View =\n      this.props.render || this.props.component || this.props.children\n\n    return View ? (\n      <div>\n        <View\n          amount={this.props.amount}\n          apiErrors={this.state.apiErrors}\n          focused={this.state.focused}\n          handleChange={this.changeHandler}\n          handleFocus={this.focusHandler}\n          handleBlur={this.blurHandler}\n          handleSubmit={this.submitHandler}\n          validationErrors={FormContainer.runValidations(\n            R.pick(['cardCode', 'cardNumber', 'expDate'], this.state.values)\n          )}\n          values={R.pick(\n            ['cardCode', 'cardNumber', 'expDate'],\n            this.state.values\n          )}\n        />\n      </div>\n    ) : null\n  }\n}\n","import { parse } from 'query-string'\nimport React, { useEffect, useState } from 'react'\n\ndeclare global {\n  interface Window {\n    AuthorizeNetIFrame: { onReceiveCommunication: (queryStr: string) => void }\n  }\n}\n\ntype TransactionResponse = {\n  accountNumber: string\n  accountType:\n    | 'Visa'\n    | 'MasterCard'\n    | 'Discover'\n    | 'AmericanExpress'\n    | 'DinersClub'\n    | 'JCB'\n    | 'eCheck'\n\n  authCode: string\n  avsResultCode:\n    | 'A'\n    | 'B'\n    | 'E'\n    | 'G'\n    | 'N'\n    | 'P'\n    | 'R'\n    | 'S'\n    | 'U'\n    | 'W'\n    | 'X'\n    | 'Y'\n    | 'Z'\n  cvvResultCode: 'M' | 'N' | 'P' | 'S' | 'U'\n  errors?: ReadonlyArray<{ errorCode: string; errorText: string }>\n  messages: ReadonlyArray<{ code: string; description: string }>\n  responseCode: '1' | '2' | '3' | '4'\n  transId: string\n}\n\ntype Message =\n  | {\n      action: 'resizeWindow'\n      width: number\n      height: number\n    }\n  | {\n      action: 'cancel'\n    }\n  | {\n      action: 'transactResponse'\n      response: string\n    }\n\nfunction isValidMessage(o: unknown): o is Message {\n  return typeof o === 'object' && o !== null\n}\n\nfunction isValidTransaction(o: unknown): o is TransactionResponse {\n  return o !== null && o !== undefined && typeof o === 'object'\n}\n\nconst AuthorizeNetPostUrl = {\n  production: 'https://accept.authorize.net/payment/payment',\n  sandbox: 'https://test.authorize.net/payment/payment'\n}\n\ntype AcceptHostedProps = {\n  style?: React.CSSProperties\n  className?: string\n  formToken: string\n  mode?: 'sandbox' | 'production'\n  type?: 'redirect' | 'iframe'\n\n  onReceiveCommunication?: (queryStr: string) => void\n  onMessage?: (message: Message) => void\n\n  onCancel?: () => void\n  onResize?: (width: number, height: number) => void\n  onTransact?: (response: TransactionResponse) => void\n}\n\nexport const AcceptHosted: React.FC<AcceptHostedProps> = ({\n  formToken,\n  mode = 'sandbox',\n  type = 'iframe',\n  onMessage,\n  style,\n  className,\n  children,\n  onReceiveCommunication,\n  onCancel,\n  onResize,\n  onTransact\n}) => {\n  const formTrigger = children ? children : <button>Pay</button>\n\n  useEffect(() => {\n    window.AuthorizeNetIFrame = {\n      onReceiveCommunication: queryStr => {\n        onReceiveCommunication && onReceiveCommunication(queryStr)\n\n        const message: unknown = parse(queryStr)\n        if (isValidMessage(message)) {\n          onMessage && onMessage(message)\n\n          switch (message.action) {\n            case 'transactResponse':\n              const json = JSON.parse(message.response)\n              if (isValidTransaction(json)) {\n                onTransact && onTransact(json)\n              }\n              break\n\n            case 'resizeWindow':\n              onResize && onResize(message.width, message.height)\n              break\n\n            case 'cancel':\n              onCancel && onCancel()\n              break\n          }\n        }\n      }\n    }\n    return () => {\n      delete window.AuthorizeNetIFrame\n    }\n  }, [])\n\n  const [submitted, setSubmitted] = useState(false)\n\n  switch (type) {\n    case 'iframe':\n      return (\n        <div style={style} className={className}>\n          <form\n            onSubmit={() => setSubmitted(true)}\n            method={'POST'}\n            action={AuthorizeNetPostUrl[mode]}\n            target={'iframeAuthorizeNet'}\n          >\n            <input name=\"token\" type={'hidden'} value={formToken} />\n            {!submitted && formTrigger}\n          </form>\n\n          <iframe\n            id={'iframeAuthorizeNet'}\n            name={'iframeAuthorizeNet'}\n            frameBorder={0}\n            width={'100%'}\n          />\n        </div>\n      )\n\n    case 'redirect':\n      return (\n        <form\n          style={style}\n          className={className}\n          method={'POST'}\n          action={AuthorizeNetPostUrl[mode]}\n        >\n          <input type={'hidden'} name={'token'} value={formToken} />\n          {formTrigger}\n        </form>\n      )\n  }\n}\n\nexport default AcceptHosted\n"],"names":["Input","props","onChange","onFocus","onBlur","mask","valid","focused","label","className","style","otherProps","onChangeHandler","ev","persist","onFocusHandler","onBlurHandler","boxSizing","color","fontSize","fontFamily","backgroundColor","width","GlobalStyle","createGlobalStyle","robotoFont","FormInput","styled","outline","border","padding","borderRadius","height","PayButton","button","cursor","disabled","boxShadow","opacity","CardNumber","type","name","placeholder","CardCode","ExpDate","ErrorComponent","slugs","cardCode","cardNumber","expDate","field","FormComponent","canSubmit","R","validationErrors","every","value","invalidFields","filter","status","map","v","slice","form","input","handleFocus","handleBlur","handleChange","values","handleSubmit","undefined","amount","spring","config","dispatchData","payload","Promise","resolve","reject","Accept","response","messages","resultCode","validateCardCode","RegExp","test","validateCardNumber","validateExpDate","AuthorizeNetScriptUrl","FormContainer","state","initialState","apiErrors","submitHandler","bind","changeHandler","blurHandler","focusHandler","componentDidMount","script","document","createElement","environment","src","Production","Sandbox","head","appendChild","componentWillUnmount","scripts","getElementsByTagName","Array","from","forEach","injectedScript","removeChild","authData","apiLoginID","apiLoginId","clientKey","split","month","year","cardData","replace","secureData","then","onSuccess","setState","message","err","text","onError","oldState","target","render","View","component","children","runValidations","React","Component","formValues","propTypes","PropTypes","number","string","isRequired","func","any","oneOf","isValidMessage","o","isValidTransaction","AuthorizeNetPostUrl","production","sandbox","AcceptHosted","formToken","mode","onMessage","onReceiveCommunication","onCancel","onResize","onTransact","formTrigger","useEffect","window","AuthorizeNetIFrame","queryStr","parse","action","json","JSON","useState","submitted","setSubmitted"],"mappings":"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"}